# Generated by Django 3.0.8 on 2020-08-06 15:16

from django.db import migrations

def forwards_func(apps, schema_editor):
    LabInfoETZ = apps.get_model("testSheets", "LabInfoETZ")
    db_alias = schema_editor.connection.alias
    LabInfoETZ.objects.using(db_alias).bulk_create([
        LabInfoETZ(lab_info_E="apply_num", lab_info_Z="申请单号"),
        LabInfoETZ(lab_info_E="test_order_num", lab_info_Z="检验编号"),
        LabInfoETZ(lab_info_E="patient_name", lab_info_Z="姓名"),
        LabInfoETZ(lab_info_E="patient_gender", lab_info_Z="性别"),
        LabInfoETZ(lab_info_E="patient_age", lab_info_Z="年龄"),
        LabInfoETZ(lab_info_E="medical_record_num", lab_info_Z="病历号"),
        LabInfoETZ(lab_info_E="department", lab_info_Z="科别"),
        LabInfoETZ(lab_info_E="bed_no", lab_info_Z="床号"),
        LabInfoETZ(lab_info_E="sample_type", lab_info_Z="标本种类"),
        LabInfoETZ(lab_info_E="apply_time", lab_info_Z="送检日期"),
        LabInfoETZ(lab_info_E="collect_time", lab_info_Z="采样日期"),
        LabInfoETZ(lab_info_E="clinical_diagnosis", lab_info_Z="临床诊断"),
        LabInfoETZ(lab_info_E="patient_feature", lab_info_Z="病人特征"),
        LabInfoETZ(lab_info_E="send_doctor", lab_info_Z="送检医生"),
        LabInfoETZ(lab_info_E="ward", lab_info_Z="病区"),
        LabInfoETZ(lab_info_E="inspect_doctor", lab_info_Z="检验者"),
        LabInfoETZ(lab_info_E="review_doctor", lab_info_Z="审核者"),
        LabInfoETZ(lab_info_E="inspect_time", lab_info_Z="检验日期"),
        LabInfoETZ(lab_info_E="report_time", lab_info_Z="报告日期"),
        LabInfoETZ(lab_info_E="publish_time", lab_info_Z="发布日期"),
        LabInfoETZ(lab_info_E="culture_result", lab_info_Z="培养结果"),
        LabInfoETZ(lab_info_E="culture_time", lab_info_Z="培养日期"),
    ])


def reverse_func(apps, schema_editor):
    LabInfoETZ = apps.get_model("testSheets", "LabInfoETZ")
    db_alias = schema_editor.connection.alias
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="apply_num").filter(lab_info_Z="申请单号").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="test_order_num").filter(lab_info_Z="检验编号").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="patient_name").filter(lab_info_Z="姓名").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="patient_gender").filter(lab_info_Z="性别").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="patient_age").filter(lab_info_Z="年龄").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="medical_record_num").filter(lab_info_Z="病历号").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="department").filter(lab_info_Z="科别").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="bed_no").filter(lab_info_Z="床号").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="sample_type").filter(lab_info_Z="标本种类").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="apply_time").filter(lab_info_Z="送检日期").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="collect_time").filter(lab_info_Z="采样日期").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="clinical_diagnosis").filter(lab_info_Z="临床诊断").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="patient_feature").filter(lab_info_Z="病人特征").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="send_doctor").filter(lab_info_Z="送检医生").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="ward").filter(lab_info_Z="病区").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="inspect_doctor").filter(lab_info_Z="检验者").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="review_doctor").filter(lab_info_Z="审核者").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="inspect_time").filter(lab_info_Z="检验日期").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="report_time").filter(lab_info_Z="报告日期").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="publish_time").filter(lab_info_Z="发布日期").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="culture_result").filter(lab_info_Z="培养结果").delete()
    LabInfoETZ.objects.using(db_alias).filter(lab_info_E="culture_time").filter(lab_info_Z="培养日期").delete()

class Migration(migrations.Migration):

    dependencies = [
        ('testSheets', '0001_initial'),
    ]

    operations = [
      migrations.RunPython(forwards_func, reverse_func),
    ]